<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace = "Chat">
 	<insert id="firstMsg" parameterType="chat.ChatDataBean">
		insert into is_chat values(chat_seq.NEXTVAL, #{ch_content}, #{ch_date}, #{ch_send_to}, #{ch_room}, #{ch_state}, #{m_id})
	</insert>
	
	<select id="startChat" resultType="chat.ChatDataBean"
		parameterType="java.sql.Timestamp">
		select * from is_chat where ch_date = #{ch_date} order by ch_date
	</select>
	
	<select id="getChatList" resultType="chat.ChatDataBean"
		parameterType="int">
		select * from is_chat where ch_num > #{ch_num} and ch_room = #{ch_room} order by ch_date
	</select>
	
	<select id="getNextRoomNumber" resultType="int">
		select chat_room_seq.nextVal from dual
		<!-- select max(ch_room) from is_chat -->
	</select>
	
	<insert id="sendMsg" parameterType="chat.ChatDataBean">
		insert into is_chat values(chat_seq.NEXTVAL, #{ch_content}, #{ch_date}, #{ch_send_to}, #{ch_room}, #{ch_state}, #{m_id})
	</insert>
	
	<select id="getCount" resultType="int">
		SELECT distinct COUNT(m_id) FROM is_chat WHERE m_id != 'admin'
	</select>
	
	<select id="getNewChatCount" resultType="int">
		select distinct COUNT(ch_room) from is_chat where ch_state = 0 and m_id != 'admin'
	</select>
	
	<update id="updateState" parameterType="int">
		update is_chat set ch_state = 1 where ch_room = #{ch_room}
	</update>
	
	<select id="chatIdList" resultType="chat.ChatDataBean" parameterType="Map">
		<!-- 
		select m_id, ch_room, ch_date, r 
		from (select m_id, ch_room, ch_date, rownum r 
		from (select distinct m_id, ch_room, max(ch_date) as ch_date
		from is_chat where m_id != 'admin' group by ch_room, m_id order by ch_room desc)) 
		where r &gt;= #{start} and r &lt;= #{end}
		 -->
		<!-- select distinct ch_room, ch_num, ch_content, ch_date, ch_send_to, m_id from is_chat order by ch_room -->
		<!-- select ch_room, ch_send_to from is_chat where ch_send_to != 'admin' group by ch_room, ch_send_to order by ch_room -->
		select distinct m_id, ch_room, ch_state, max(ch_date) as ch_date 
		from is_chat where m_id != 'admin' group by m_id, ch_room, ch_state order by ch_state, ch_room desc
	</select>
	
	<select id="AdminChatList" resultType="chat.ChatDataBean"
		parameterType="Map">
		select * from is_chat where ch_room = #{ch_room} order by ch_date
		<!-- select * from is_chat where ch_room = #{ch_room} and ((m_id = #{m_id} and ch_send_to = #{ch_send_to}) 
		or (m_id = #{ch_send_to} and ch_send_to = #{m_id})) -->
	</select>
 </mapper>